@charset "UTF-8";@font-face{font-display:swap;font-family:Martel;font-style:normal;font-weight:400;src:url(../fonts/Martel-Regular.woff2) format("woff2"),url(../fonts/Martel-Regular.woff) format("woff"),url(../fonts/Martel-Regular.ttf) format("truetype")}@font-face{font-display:swap;font-family:Martel;font-style:normal;font-weight:700;src:url(../fonts/Martel-ExtraBold.woff2) format("woff2"),url(../fonts/Martel-ExtraBold.woff) format("woff"),url(../fonts/Martel-ExtraBold.ttf) format("truetype")}@font-face{font-display:swap;font-family:Cormorant;font-style:normal;font-weight:400;src:url(../fonts/Cormorant-Regular.woff2) format("woff2"),url(../fonts/Cormorant-Regular.woff) format("woff"),url(../fonts/Cormorant-Regular.ttf) format("truetype")}html{-webkit-text-size-adjust:100%;line-height:1.15}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}:after,:before,article,aside,body,div,footer,form,header,main,nav,section,small,svg{-webkit-box-sizing:border-box;box-sizing:border-box;display:block}html{scroll-behavior:smooth}body{-webkit-tap-highlight-color:rgba(117,10,10,.4);background-color:#fff;font-family:Martel,serif;font-size:16px;line-height:1.5}h1,h2,h3{font-family:Cormorant,serif;font-weight:400;line-height:1}h1 span,h2 span,h3 span{font-size:1.3em}h2{font-size:2rem;margin-bottom:24px;margin-top:30px}a,button{-webkit-box-sizing:border-box;box-sizing:border-box;outline:none}a{text-decoration:none}button{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}p,small{margin:0}p a,small a{color:#bc912a;font-weight:700;-webkit-transition:all .3s;transition:all .3s}p a:active,p a:focus,p a:hover,small a:active,small a:focus,small a:hover{background-color:#ffb4b4;color:#750a0a}p em,small em{font-family:Cormorant,serif;font-size:1.3em;font-style:italic;line-height:1;margin:0 .1em}::-moz-selection{background-color:#750a0a;color:#fff}::selection{background-color:#750a0a;color:#fff}.maxwidth--xxs{max-width:300px}.maxwidth--xs{max-width:400px}.maxwidth--sm{max-width:500px}.maxwidth--md{max-width:600px}.maxwidth--lg{max-width:750px}.container{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;justify-content:center}.container>article,.container>aside,.container>div{padding:18px}.badge{font-family:Martel,serif;font-size:.7em;font-style:normal;padding:0 12px}.badge:not(:first-child){margin-left:12px}.badge:not(:last-child){margin-right:12px}.badge small{display:inline;font-size:.6em}.badge--primary{background-color:#ffb4b4;-webkit-box-shadow:3px 3px 0 0 hsla(0,100%,85%,.5);box-shadow:3px 3px 0 0 hsla(0,100%,85%,.5);color:#750a0a}.badge--secondary{background-color:#ffe19c;-webkit-box-shadow:3px 3px 0 0 rgba(255,225,156,.5);box-shadow:3px 3px 0 0 rgba(255,225,156,.5);color:#bc912a}.top-banner{background-color:#000;background-position:0;background-repeat:no-repeat;background-size:contain}.top-banner article{background-color:rgba(0,0,0,.5);padding:18px}@media (min-width:550px){.top-banner article{padding:24px}}@media (min-width:960px){.top-banner article{padding:30px}}.basic-banner img{width:70%}.banner-gradient{color:#fff;padding-top:18px}.banner-gradient .content{margin:0 auto;max-width:750px;padding:18px;text-align:center}@media (min-width:960px){.banner-gradient .content{padding-bottom:0}}.banner-gradient .content img{display:block;margin:0 auto;max-width:150px;width:50%}.banner-gradient .wave{-webkit-transform:scaleX(-1) translateY(1px);transform:scaleX(-1) translateY(1px)}.banner-gradient--primary{background-color:#750a0a;background-image:-webkit-gradient(linear,left top,left bottom,from(#750a0a),to(#460707));background-image:linear-gradient(180deg,#750a0a,#460707)}.banner-gradient--secondary{background-color:#bc912a;background-image:-webkit-gradient(linear,left top,left bottom,from(#bc912a),to(#573d00));background-image:linear-gradient(180deg,#bc912a,#573d00)}.button{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-image:-webkit-gradient(linear,left top,left bottom,color-stop(50%,transparent),color-stop(50%,#000));background-image:linear-gradient(transparent 50%,#000 0);background-size:auto 202%;border:1px solid #000;color:#000;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-family:Cormorant,serif;font-size:1.1rem;font-variant:small-caps;font-weight:700;height:36px;justify-content:center;letter-spacing:.2em;padding:0 10px 0 12px;-webkit-transition:all .3s;transition:all .3s}.button.active,.button:active,.button:focus,.button:hover{background-position-y:99%;color:#fff;text-shadow:none}.button.logo--top{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:72px;padding-top:6px}.button.logo svg{-webkit-transition:all .3s;transition:all .3s}.button.logo.active svg,.button.logo:active svg,.button.logo:focus svg,.button.logo:hover svg{fill:#fff}@media not all and (min-width:960px){.button.icon-mobile{font-size:0;padding:6px}}.button.icon-mobile svg{fill:none;stroke:#000;stroke-width:10;display:none;height:100%;-webkit-transition:all .3s;transition:all .3s}@media not all and (min-width:960px){.button.icon-mobile svg{display:block}}.button.icon-mobile.active svg,.button.icon-mobile:active svg,.button.icon-mobile:focus svg,.button.icon-mobile:hover svg{stroke:#fff}.button--primary{background-image:-webkit-gradient(linear,left top,left bottom,color-stop(50%,transparent),color-stop(50%,#750a0a));background-image:linear-gradient(transparent 50%,#750a0a 0);border-color:#750a0a;color:#750a0a}.button--primary.logo svg{fill:#750a0a}.button--primary.icon-mobile svg{stroke:#750a0a}.button--secondary{background-image:-webkit-gradient(linear,left top,left bottom,color-stop(50%,transparent),color-stop(50%,#bc912a));background-image:linear-gradient(transparent 50%,#bc912a 0);border-color:#bc912a;color:#bc912a}.button--secondary.logo svg{fill:#bc912a}.button--secondary.icon-mobile svg{stroke:#bc912a}.button--white{background-image:-webkit-gradient(linear,left top,left bottom,color-stop(50%,transparent),color-stop(50%,#fff));background-image:linear-gradient(transparent 50%,#fff 0);border-color:#fff;color:#fff}.button--white.logo svg{fill:#fff}.button--white.icon-mobile svg{stroke:#fff}.button--active-primary.active,.button--active-primary:active,.button--active-primary:focus,.button--active-primary:hover{color:#460707}.button--active-primary.active.logo svg,.button--active-primary:active.logo svg,.button--active-primary:focus.logo svg,.button--active-primary:hover.logo svg{fill:#460707}.button--active-primary.active.icon-mobile svg,.button--active-primary:active.icon-mobile svg,.button--active-primary:focus.icon-mobile svg,.button--active-primary:hover.icon-mobile svg{stroke:#460707}.button--active-secondary.active,.button--active-secondary:active,.button--active-secondary:focus,.button--active-secondary:hover{color:#573d00}.button--active-secondary.active.logo svg,.button--active-secondary:active.logo svg,.button--active-secondary:focus.logo svg,.button--active-secondary:hover.logo svg{fill:#573d00}.button--active-secondary.active.icon-mobile svg,.button--active-secondary:active.icon-mobile svg,.button--active-secondary:focus.icon-mobile svg,.button--active-secondary:hover.icon-mobile svg{stroke:#573d00}.buttons{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;justify-content:center}.buttons .button,.buttons .link{margin:12px}.buttons span{text-align:center}.buttons span small{margin:0 12px 12px}.card{border:4px solid #fff;margin:18px;outline:1px solid;padding:24px 18px}.card :first-child{margin-top:0}.card :last-child{margin-bottom:0}.card p{font-size:.9rem;margin:12px 0}.card--primary{background-color:#ffb4b4;color:#460707;outline-color:#ffb4b4}.card--primary p a{color:#300000}.card--primary p a:active,.card--primary p a:focus,.card--primary p a:hover{background-color:#ff6565;color:#300000}.card--secondary{background-color:#ffe19c;color:#573d00;outline-color:#ffe19c}.card--secondary p a{color:#241400}.card--secondary p a:active,.card--secondary p a:focus,.card--secondary p a:hover{background-color:#fac854;color:#241400}.chapter{margin:0 auto;max-width:650px;padding:18px}.chapter h2{margin-bottom:12px;text-align:center}.chapter .chapter-date{color:#4e4e4e;font-family:Cormorant,serif;font-size:1.2rem;text-align:center}.chapter .chapter-date:after{background-color:#fac854;content:"";height:1px;margin:18px auto 30px;width:100px}.chapter p{font-size:.9rem;margin:12px 0;text-align:justify;text-indent:2em}.hamburger{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-box-pack:justify;-ms-flex-pack:justify;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;background:transparent;border:none;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;height:24px;justify-content:space-between;padding:0;position:relative;width:36px}.hamburger span{background-color:#750a0a;height:3px;-webkit-transition:all .3s;transition:all .3s;width:100%}.hamburger span:last-of-type{-ms-flex-item-align:end;align-self:flex-end}.hamburger.js-active span:first-of-type,.hamburger.js-active span:last-of-type{width:0}@media (min-width:960px){.hamburger{display:none}}.img--book{display:block;max-width:300px;min-width:180px;padding:0 18px;width:30%}.link{color:#000;font-family:Cormorant,serif;font-size:1.1rem;font-variant:small-caps;font-weight:700;letter-spacing:.2em;position:relative;text-align:center}.link:after,.link:before{background-color:#000;content:"";height:1px;opacity:.5;position:absolute;-webkit-transition:all .3s;transition:all .3s;width:0}.link:before{left:0}.link:after{right:0;-webkit-transition-delay:.15s;transition-delay:.15s}.link.active:after,.link.active:before,.link:active:after,.link:active:before,.link:focus:after,.link:focus:before,.link:hover:after,.link:hover:before{width:100%}.link--primary{color:#750a0a}.link--primary:after,.link--primary:before{background-color:#750a0a}.link--secondary{color:#bc912a}.link--secondary:after,.link--secondary:before{background-color:#bc912a}.link--white{color:#fff}.link--white:after,.link--white:before{background-color:#fff}.list{list-style-type:none;margin:0;padding-left:2em}.list li{margin:18px 0;text-indent:-2em}.list li:before{content:"—";display:inline;margin-right:12px}.list--primary li:before{color:#750a0a}.list--secondary li:before{color:#bc912a}.logo{margin:12px}.logo svg{-webkit-transition:all .1s,fill .3s;transition:all .1s,fill .3s}.logo:active svg,.logo:focus svg,.logo:hover svg{-webkit-transform:scale(1.05);transform:scale(1.05)}.logo--sm svg{height:30px;max-width:120px}.logo--white svg{fill:#fff;opacity:.6}.logo--white:active svg,.logo--white:focus svg,.logo--white:hover svg{opacity:1}.logo--primary svg{fill:#750a0a}.logo--primary:active svg,.logo--primary:focus svg,.logo--primary:hover svg{fill:#000}.logo--secondary svg{fill:#bc912a}.logo--secondary:active svg,.logo--secondary:focus svg,.logo--secondary:hover svg{fill:#000}@media not all and (min-width:960px){.overlay{background-color:rgba(0,0,0,.5);height:100%;left:0;opacity:0;pointer-events:none;position:fixed;top:0;-webkit-transition:opacity .3s;transition:opacity .3s;width:100%;z-index:100}}@media (min-width:960px){.overlay{display:none}}.person{margin:18px 18px 3px}.person img{border:1px solid #a0a0a0;display:block;margin:0 auto;padding:6px;width:150px}blockquote{margin:0;padding:0 30px;position:relative}@media not all and (min-width:550px){blockquote{padding:0 24px}}blockquote:after,blockquote:before{color:#750a0a;font-size:1.1rem;line-height:1;position:absolute}blockquote:before{content:"«";left:0;top:0}blockquote:after{bottom:0;content:"»";right:0}blockquote p{font-size:.9rem}figure figcaption{color:#4e4e4e;font-family:Cormorant,serif;font-size:1.1rem;font-style:italic;margin-top:6px;text-align:center}.text--sm p{font-size:.9rem}.text--center p{text-align:center}.text--margin-sm p{margin:12px 0}.title--header{color:#fff;letter-spacing:.3em;margin:18px 18px 30px;text-align:center;text-transform:uppercase}.video{background-color:#000;height:56.25vw;margin:0 auto;max-height:421.875px;max-width:750px}.video iframe{border:none;height:100%;width:100%}.wave .shape{fill:#fff}.wave .line{fill:none;stroke:#fff;stroke-width:7px;stroke-dasharray:3100;-webkit-transition:stroke-dashoffset 5s linear;transition:stroke-dashoffset 5s linear}@media (min-width:1200px){.wave .line{stroke-width:3px}}:hover>.wave .line{stroke-dashoffset:3100}.logo--bp svg{height:0;-webkit-transition:all .3s;transition:all .3s}.logo--bp svg circle{-webkit-transform:scale(0);transform:scale(0);-webkit-transform-origin:center;transform-origin:center}.logo--bp svg circle,.logo--bp svg path{-webkit-transition:all .3s;transition:all .3s}.logo--bp svg path{-webkit-transform:scale(0) rotate(90deg);transform:scale(0) rotate(90deg);-webkit-transform-origin:center;transform-origin:center}.logo--bp:active svg,.logo--bp:focus svg,.logo--bp:hover svg{height:100%}.logo--bp:active svg circle,.logo--bp:focus svg circle,.logo--bp:hover svg circle{-webkit-transform:scale(1);transform:scale(1);-webkit-transition-delay:.3s;transition-delay:.3s}.logo--bp:active svg path,.logo--bp:focus svg path,.logo--bp:hover svg path{-webkit-transform:scale(1) rotate(0);transform:scale(1) rotate(0);-webkit-transition-delay:.6s;transition-delay:.6s}.logo--carmidor svg{stroke:#000;stroke-width:4px;stroke-dasharray:5000;stroke-dashoffset:5000;fill:transparent;-webkit-animation:animation-u1f199027 5s linear forwards;animation:animation-u1f199027 5s linear forwards}@-webkit-keyframes animation-u1f199027{0%{stroke-dashoffset:5000}80%{stroke-dashoffset:0}90%{stroke-dashoffset:0;stroke:#000;fill:transparent}to{stroke-dashoffset:0;stroke:transparent;fill:#000}}@keyframes animation-u1f199027{0%{stroke-dashoffset:5000}80%{stroke-dashoffset:0}90%{stroke-dashoffset:0;stroke:#000;fill:transparent}to{stroke-dashoffset:0;stroke:transparent;fill:#000}}main{-webkit-animation:animation-u2ec4e7bb .5s linear forwards;animation:animation-u2ec4e7bb .5s linear forwards;opacity:0;padding-top:48px;scroll-behavior:smooth}@-webkit-keyframes animation-u2ec4e7bb{0%{opacity:0}to{opacity:1}}@keyframes animation-u2ec4e7bb{0%{opacity:0}to{opacity:1}}nav{-webkit-box-pack:justify;-ms-flex-pack:justify;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#ececec;display:-webkit-box;display:-ms-flexbox;display:flex;height:48px;justify-content:space-between;left:0;padding:6px;position:fixed;top:0;width:100%;z-index:110}@media (min-width:960px){nav{padding:6px 18px}nav.not-fixed-on-desktop{position:relative}}nav .home{display:block;height:100%;padding:3px 0}nav .home svg{height:100%;-webkit-transition:all .3s;transition:all .3s}nav .home:active svg,nav .home:focus svg,nav .home:hover svg{fill:#750a0a}nav .overlay{top:48px}nav ul{-webkit-box-sizing:border-box;box-sizing:border-box;list-style-type:none;margin:0;padding:0}@media not all and (min-width:960px){nav ul{background-color:#ececec;left:0;padding:12px;position:fixed;top:48px;-webkit-transform:scaleY(0);transform:scaleY(0);-webkit-transform-origin:top center;transform-origin:top center;-webkit-transition:all .3s;transition:all .3s;width:100%;z-index:100}}@media (min-width:960px){nav ul{-webkit-box-flex:1;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex:1;flex:1;margin:0 18px}}@media not all and (min-width:960px){nav ul li{padding:12px;text-align:center}}@media (min-width:960px){nav ul li{padding:0 12px}}@media not all and (min-width:960px){nav ul .link{font-size:1.2rem}.js-active{overflow:hidden}.js-active nav .overlay{opacity:1;pointer-events:all}.js-active nav ul{-webkit-transform:scale(1);transform:scale(1)}}footer{background-color:#000;font-size:.8rem;padding-bottom:18px;text-align:center}@media (min-width:960px){footer{padding-bottom:24px}}footer .wave{-webkit-transform:rotate(180deg) translateY(1px);transform:rotate(180deg) translateY(1px)}footer small{color:#a0a0a0;font-size:1em;margin:18px 12px}@media (min-width:960px){footer small{margin-top:0}}footer ul{list-style-type:none;margin:0;padding:0}@media (min-width:550px){footer ul{-webkit-box-pack:center;-ms-flex-pack:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;justify-content:center}}@media not all and (min-width:550px){footer ul li{margin:6px 0}}@media (min-width:550px){footer ul li{-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex}footer ul li:not(:first-of-type):before{color:#888;content:"/";margin:0 12px}}footer ul li a{color:#bc912a;display:inline-block;font-size:.8em;letter-spacing:.3em;text-transform:uppercase;-webkit-transition:all .3s;transition:all .3s}@media not all and (min-width:550px){footer ul li a{padding:6px 0}}footer ul li a:active,footer ul li a:focus,footer ul li a:hover{color:#ffe19c}.map{background-color:#460707;background-image:url(../img/bg/map.png);background-position:50%;background-size:cover;cursor:-webkit-grab;cursor:grab;font-family:Cormorant,serif;height:100vh;overflow-x:auto;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.map.js-grabbing{scroll-behavior:auto}.map.js-grabbing,.map.js-grabbing *{cursor:-webkit-grabbing;cursor:grabbing}@media (min-width:960px){.map{height:calc(100vh - 48px);overflow-x:hidden;padding-top:0}}.map *{-webkit-transition:opacity .3s,stroke-opacity .3s;transition:opacity .3s,stroke-opacity .3s}.map h1{display:none}.map svg{-webkit-transition:width .1s linear;transition:width .1s linear;width:100%}.map text path{fill:none}.map .map-title{fill:#fff;font-size:28px;opacity:.5;pointer-events:none}.map .map-title text:first-of-type{font-size:18px}.map .grids{opacity:.06}.map .grids line{stroke:#fff}.map .grids .grid-b line{stroke-width:.6px}.map .grids .grid-c line{stroke-width:.4px}.map .nepyrme{-webkit-filter:drop-shadow(#ff6565 0 0 20px);filter:drop-shadow(#ff6565 0 0 20px)}.map .ville{cursor:pointer;font-size:8px;font-weight:700;outline:none;text-shadow:0 0 8px #bc912a,0 0 2px #fac854}.map .ville circle{stroke:#000;stroke-width:.5px;stroke-dasharray:50;stroke-dashoffset:50;-webkit-filter:drop-shadow(#fac854 0 0 1px);filter:drop-shadow(#fac854 0 0 1px);-webkit-transition:all .3s;transition:all .3s}.map .ville:active circle,.map .ville:focus circle,.map .ville:hover circle{fill:#bc912a;-webkit-animation:animation-u28d6255e 3s linear forwards;animation:animation-u28d6255e 3s linear forwards}@-webkit-keyframes animation-u28d6255e{0%{stroke-dashoffset:50}to{stroke-dashoffset:0}}@keyframes animation-u28d6255e{0%{stroke-dashoffset:50}to{stroke-dashoffset:0}}.map .nom-pays{font-size:24px;font-variant:small-caps;font-weight:700;letter-spacing:.2em;pointer-events:none;text-shadow:0 0 12px #bc912a,0 0 2px #fac854}.map .pays-zone,.map .region-zone{fill:transparent;stroke:#fac854;stroke-opacity:0}.map .terre{fill:#bc912a;-webkit-filter:drop-shadow(2px 2px 20px #300000);filter:drop-shadow(2px 2px 20px #300000)}.map .montagnes{-webkit-filter:drop-shadow(0 0 12px #241400);filter:drop-shadow(0 0 12px #241400);pointer-events:none}.map .montagnes path{fill:#573d00}.map .nom-montagne{fill:#573d00;font-size:8px;font-weight:700;letter-spacing:.1em;text-shadow:0 0 6px #fac854,0 0 2px #ffe19c}.map .nom-montagne g{opacity:0}.map .nom-ocean{fill:#ff6565;font-size:26px;opacity:.6}.map .fleuve,.map .nom-ocean{font-variant:small-caps;letter-spacing:.2em}.map .fleuve{fill:#460707;font-size:8px;font-weight:700;pointer-events:none}.map-legend{-webkit-box-align:center;-ms-flex-align:center;align-items:center;bottom:0;display:-webkit-box;display:-ms-flexbox;display:flex;left:0;position:fixed}@media not all and (min-width:960px){.map-legend{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:6px 12px;width:100%}}@media (min-width:960px){.map-legend{gap:24px;max-width:100%;padding:12px}}.zoom{-webkit-box-pack:justify;-ms-flex-pack:justify;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-image:linear-gradient(180deg,transparent 0 15px,#fff 15px 16px,transparent 16px 100%);justify-content:space-between;width:100px}.zoom,.zoom button{display:-webkit-box;display:-ms-flexbox;display:flex}.zoom button{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;background-color:#fff;border:none;border-radius:50%;-webkit-box-shadow:0 0 16px rgba(0,0,0,.2);box-shadow:0 0 16px rgba(0,0,0,.2);color:#000;font-size:1.4rem;font-weight:400;height:30px;justify-content:center;line-height:1;padding:0;-webkit-transition:all .3s;transition:all .3s;width:30px}.zoom button:disabled{cursor:not-allowed}@media (min-width:960px){.zoom button:not(:disabled):focus,.zoom button:not(:disabled):hover{background-color:#ffb4b4}}.zoom button:not(:disabled):active{background-color:#750a0a;color:#ffb4b4}.echelle span{border:1px solid #fff;border-top:none;-webkit-box-sizing:border-box;box-sizing:border-box;color:#fff;display:none;font-size:.7rem;line-height:1;text-align:center;text-shadow:0 0 4px #000;-webkit-transition:all .1s linear;transition:all .1s linear;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.echelle .level-a{width:18vw}[data-zoom="1"] .level-a{display:block}[data-zoom="1"] .map .pays{cursor:pointer}[data-zoom="1"] .map .pays:hover .pays-zone{stroke-opacity:1}[data-zoom="1"] .map .fleuve,[data-zoom="1"] .map .grid-b,[data-zoom="1"] .map .grid-c,[data-zoom="1"] .map .ville{opacity:0}@media not all and (min-width:960px){[data-zoom="1.5"] .level-a{display:block}[data-zoom="1.5"] .map .pays{cursor:pointer}[data-zoom="1.5"] .map .pays:hover .pays-zone{stroke-opacity:1}[data-zoom="1.5"] .map .fleuve,[data-zoom="1.5"] .map .grid-b,[data-zoom="1.5"] .map .grid-c,[data-zoom="1.5"] .map .ville{opacity:0}}@media (min-width:960px){[data-zoom="1.5"] .level-b{display:block}[data-zoom="1.5"] .map .region{cursor:pointer}[data-zoom="1.5"] .map .region .region-zone{stroke-width:.5px}[data-zoom="1.5"] .map .region:hover .region-zone{stroke-opacity:1}[data-zoom="1.5"] .map .fleuve text,[data-zoom="1.5"] .map .grid-a,[data-zoom="1.5"] .map .grid-c,[data-zoom="1.5"] .map .nom-pays,[data-zoom="1.5"] .map .ville{opacity:0}[data-zoom="1.5"] .map .grande-ville{opacity:1}[data-zoom="1.5"] .map .nom-ocean{opacity:.4}}@media not all and (min-width:960px){[data-zoom="2"] .level-a,[data-zoom="2.5"] .level-a{display:block}[data-zoom="2"] .map .pays,[data-zoom="2.5"] .map .pays{cursor:pointer}[data-zoom="2"] .map .pays:hover .pays-zone,[data-zoom="2.5"] .map .pays:hover .pays-zone{stroke-opacity:1}[data-zoom="2"] .map .fleuve,[data-zoom="2"] .map .grid-b,[data-zoom="2"] .map .grid-c,[data-zoom="2"] .map .ville,[data-zoom="2.5"] .map .fleuve,[data-zoom="2.5"] .map .grid-b,[data-zoom="2.5"] .map .grid-c,[data-zoom="2.5"] .map .ville{opacity:0}}@media (min-width:960px){[data-zoom="2"] .level-c,[data-zoom="2.5"] .level-c{display:block}[data-zoom="2"] .map .grid-a,[data-zoom="2"] .map .grid-b,[data-zoom="2"] .map .nom-pays,[data-zoom="2.5"] .map .grid-a,[data-zoom="2.5"] .map .grid-b,[data-zoom="2.5"] .map .nom-pays{opacity:0}[data-zoom="2"] .map .nom-montagne g:hover,[data-zoom="2.5"] .map .nom-montagne g:hover{opacity:1}[data-zoom="2"] .map .nom-ocean,[data-zoom="2.5"] .map .nom-ocean{opacity:.3}}@media not all and (min-width:960px){[data-zoom="3"] .level-b,[data-zoom="3.5"] .level-b{display:block}[data-zoom="3"] .map .region,[data-zoom="3.5"] .map .region{cursor:pointer}[data-zoom="3"] .map .region .region-zone,[data-zoom="3.5"] .map .region .region-zone{stroke-width:.5px}[data-zoom="3"] .map .region:hover .region-zone,[data-zoom="3.5"] .map .region:hover .region-zone{stroke-opacity:1}[data-zoom="3"] .map .fleuve text,[data-zoom="3"] .map .grid-a,[data-zoom="3"] .map .grid-c,[data-zoom="3"] .map .nom-pays,[data-zoom="3"] .map .ville,[data-zoom="3.5"] .map .fleuve text,[data-zoom="3.5"] .map .grid-a,[data-zoom="3.5"] .map .grid-c,[data-zoom="3.5"] .map .nom-pays,[data-zoom="3.5"] .map .ville{opacity:0}[data-zoom="3"] .map .grande-ville,[data-zoom="3.5"] .map .grande-ville{opacity:1}[data-zoom="3"] .map .nom-ocean,[data-zoom="3.5"] .map .nom-ocean{opacity:.4}}@media (min-width:960px){[data-zoom="3"] .level-c,[data-zoom="3.5"] .level-c{display:block}[data-zoom="3"] .map .grid-a,[data-zoom="3"] .map .grid-b,[data-zoom="3"] .map .nom-pays,[data-zoom="3.5"] .map .grid-a,[data-zoom="3.5"] .map .grid-b,[data-zoom="3.5"] .map .nom-pays{opacity:0}[data-zoom="3"] .map .nom-montagne g:hover,[data-zoom="3.5"] .map .nom-montagne g:hover{opacity:1}[data-zoom="3"] .map .nom-ocean,[data-zoom="3.5"] .map .nom-ocean{opacity:.3}}[data-zoom="4"] .level-c,[data-zoom="4.5"] .level-c{display:block}[data-zoom="4"] .map .grid-a,[data-zoom="4"] .map .grid-b,[data-zoom="4"] .map .nom-pays,[data-zoom="4.5"] .map .grid-a,[data-zoom="4.5"] .map .grid-b,[data-zoom="4.5"] .map .nom-pays{opacity:0}[data-zoom="4"] .map .nom-montagne g:hover,[data-zoom="4.5"] .map .nom-montagne g:hover{opacity:1}[data-zoom="4"] .map .nom-ocean,[data-zoom="4.5"] .map .nom-ocean{opacity:.3}.home-banner{background-image:url(../img/bg/home.png)}@media (min-width:1200px){.home-banner{background-size:60%}}.home-banner article{max-width:100%;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}@media (min-width:550px){.home-banner article{margin-left:auto}}@media (min-width:1200px){.home-banner article{margin-left:60%}}.home-banner article h1{color:#fff;font-size:3rem;font-variant:small-caps;letter-spacing:.2em;margin-bottom:24px;margin-top:45px}.home-banner article h1 em{display:inline-block;font-style:normal}.home-banner article h1 em:first-letter{font-size:1.5em}@media not all and (min-width:550px){.home-banner article h1{font-size:2.5rem;margin-top:30px}}.home-banner article strong{color:#bc912a;display:block;font-size:1.1rem;letter-spacing:.4em;text-transform:uppercase}@media not all and (min-width:550px){.home-banner article strong{font-size:1rem}}.home-banner article a{-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#bc912a;background-image:-webkit-gradient(linear,left top,right bottom,from(#fac854),color-stop(20%,#bc912a),to(#573d00));background-image:linear-gradient(to bottom right,#fac854,#bc912a 20%,#573d00);background-position-x:100%;background-size:200%;color:#000;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:.9rem;height:36px;line-height:1;margin:12px 0;padding:6px 12px;-webkit-transition:all .3s;transition:all .3s}@media not all and (min-width:550px){.home-banner article a{font-size:.8rem}}.home-banner article a svg{margin-left:6px}.home-banner article a svg path{fill:#bc912a}.home-banner article a:active,.home-banner article a:focus,.home-banner article a:hover{background-position-x:0}.home-banner .wave{-webkit-transform:scaleX(-1) translateY(1px);transform:scaleX(-1) translateY(1px)}.home-intro{margin:0 auto;padding:18px}@media (min-width:960px){.home-intro{padding:0 18px}}.home-intro svg{margin:0 auto;width:120px}.home-intro p{margin:18px 0}.home-book{background-color:#750a0a;background-image:-webkit-gradient(linear,left top,left bottom,from(#750a0a),to(#460707));background-image:linear-gradient(180deg,#750a0a,#460707)}.home-book .wave:first-child{-webkit-transform:scaleY(-1) translateY(1px);transform:scaleY(-1) translateY(1px)}.home-book .content{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap-reverse;flex-wrap:wrap-reverse;justify-content:center;padding:18px 0}.home-book article{padding:18px}.home-book h2{color:#fff;margin-top:0}.home-book p{color:#ffb4b4}.home-trailer{padding-bottom:24px;text-align:center}.home-trailer h2{margin:18px}.home-trailer small{color:#888;font-size:.7rem;margin:18px auto;padding:0 18px}.home-discover{background-attachment:fixed;background-color:#460707;background-image:url(../img/bg/buy.png);background-position:50%;background-size:cover;text-shadow:0 0 16px #000}.home-discover .wave:first-child{-webkit-transform:rotate(180deg) translateY(1px);transform:rotate(180deg) translateY(1px)}@media not all and (min-width:960px){.home-discover h2{margin-top:45px}.home-discover .buttons{margin-bottom:30px}}.home-comments h2{text-align:center}.home-comments figure{margin:18px}.home-comments figure blockquote{margin:0 auto;max-width:550px}.home-lore{background-color:#bc912a;background-image:-webkit-gradient(linear,left top,left bottom,from(#bc912a),to(#573d00));background-image:linear-gradient(180deg,#bc912a,#573d00)}.home-lore .wave:first-child{-webkit-transform:scaleY(-1) translateY(1px);transform:scaleY(-1) translateY(1px)}.home-lore .wave:last-child{-webkit-transform:scaleX(-1) translateY(1px);transform:scaleX(-1) translateY(1px)}@media (min-width:960px){.home-lore article{margin:0 30px}}.home-lore article h2{color:#ffe19c;text-align:center}.home-lore article p{color:#fff}.home-lore article .buttons{margin-top:18px}.home-lore article svg{fill:transparent;stroke:#573d00;stroke-width:1px;margin:0 auto;-webkit-transition:stroke-dashoffset 3s linear,fill .5s linear;transition:stroke-dashoffset 3s linear,fill .5s linear;width:60%}.home-lore article:hover svg{fill:#bc912a;-webkit-transition-delay:0s,2.5s;transition-delay:0s,2.5s}.home-lore article:first-of-type svg{stroke-dasharray:910}.home-lore article:first-of-type:hover svg{stroke-dashoffset:910}.home-lore article:last-of-type svg{stroke-dasharray:1920}.home-lore article:last-of-type:hover svg{stroke-dashoffset:1920}.home-author{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap-reverse;flex-wrap:wrap-reverse;justify-content:center}.home-author article{padding:18px}.home-author article .buttons,.home-author article h2{margin-top:12px}.links-top h1{font-size:1.7rem;margin:18px 0}.links-content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.links-content .card,.links-content div{text-align:center}.links-content .card small,.links-content div small{font-size:.7rem;margin-top:6px}.links-content div{padding:12px 18px}.links-content div small{color:#4e4e4e}.legal article,.legal aside{margin:0 auto;padding:18px}.legal article h2,.legal aside h2{margin-top:12px;text-align:center}.legal article small{color:#888;font-size:.7rem}.buy-top{background-attachment:fixed;background-color:#460707;background-image:url(../img/bg/buy.png);background-position:bottom;background-size:cover;padding-top:30px;text-shadow:0 0 16px #000}@media not all and (min-width:960px){.buy-top .buttons{margin-bottom:30px}}.buy-book .content{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap-reverse;flex-wrap:wrap-reverse;justify-content:center}.buy-book article{max-width:710px;padding:18px;text-align:center}.buy-book article h2{margin-top:0}.buy-book article .buttons{margin:6px -12px}.booknook{-webkit-box-pack:center;-ms-flex-pack:center;display:-webkit-box;display:-ms-flexbox;display:flex;justify-content:center}@media (min-width:550px){.booknook article{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;display:-webkit-box;display:-ms-flexbox;display:flex}}.booknook article svg{fill:#750a0a;-ms-flex-negative:0;flex-shrink:0;max-width:40%;width:140px}@media not all and (min-width:550px){.booknook article svg{margin:0 auto 18px}}@media (min-width:550px){.booknook article svg{margin-right:24px}}@media not all and (min-width:550px){.booknook article h2{text-align:center}}.buy-ebook{background-color:#750a0a;background-image:-webkit-gradient(linear,left top,left bottom,from(#750a0a),to(#460707));background-image:linear-gradient(180deg,#750a0a,#460707)}.buy-ebook .wave:first-child{-webkit-transform:scaleY(-1) translateY(1px);transform:scaleY(-1) translateY(1px)}.buy-ebook .content{-webkit-box-pack:center;-ms-flex-pack:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;justify-content:center;padding:18px 0}.buy-ebook article{padding:18px;text-align:center}.buy-ebook h2{color:#fff;margin-bottom:45px;margin-top:0}.buy-ebook .buttons small{color:#ffb4b4}.buy-ebook p{color:#fff;margin-top:45px}.buy-details{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.buy-details aside svg{fill:#573d00;height:150px;margin:0 auto 24px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
